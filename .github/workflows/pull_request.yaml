# This workflow runs a small set of indexed_gzip_fileobj_fork_epicfaace unit
# tests on a range of different versions of Python.
# It is run on pull requests.

on: pull_request

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:             ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10"]
        extra-args:     ["", "--concat"]
        exclude:
          - os:             windows-latest
            python-version: 2.7

    env:
      PLATFORM:       ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      TEST_SUITE:     "not slow_test"
      EXTRA_ARGS:     ${{ matrix.extra-args }}
      ENV_DIR:        ./test.env

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Create test environment
        run:  bash ./.ci/create_test_env.sh "$ENV_DIR"
      - name: Log test environment
        run: |
          source ./.ci/activate_env.sh "$ENV_DIR"
          python -V
          pip freeze
      - name: Download zlib
        if:   ${{ matrix.os == 'windows-latest' }}
        run:  bash ./.ci/download_zlib.sh
      - name: Build indexed_gzip_fileobj_fork_epicfaace
        run:  bash ./.ci/build_dev_indexed_gzip_fileobj_fork_epicfaace.sh "$ENV_DIR"
      - name: Run tests
        run:  bash  ./.ci/run_tests.sh "$ENV_DIR"


  # Quick tests on 32 bit platform
  test-32bit:
    runs-on: ubuntu-latest
    container: i386/ubuntu:18.04
    strategy:
      matrix:
        python-version: ["2.7", "3.8"]
        extra-args:     ["", "--concat"]

    env:
      USING_OS_PYTHON: 1
      PYTHON_VERSION:  ${{ matrix.python-version }}
      TEST_SUITE:      "not slow_test"
      EXTRA_ARGS:      ${{ matrix.extra-args }}
      ENV_DIR:         ./test.env

    steps:
      - name: Install git
        run:  apt-get update -y && apt-get install -y git
      - uses: actions/checkout@v1
      - name: Install system dependencies
        run:  bash ./.ci/install_32bit_dependencies.sh
      - name: Create test environment
        run:  bash ./.ci/create_test_env.sh "$ENV_DIR"
      - name: Log test environment
        run: |
          source ./.ci/activate_env.sh "$ENV_DIR"
          python -V
          pip freeze
      - name: Build indexed_gzip_fileobj_fork_epicfaace
        run:  bash ./.ci/build_dev_indexed_gzip_fileobj_fork_epicfaace.sh "$ENV_DIR"
      - name: Run tests
        run:  bash  ./.ci/run_tests.sh "$ENV_DIR"
